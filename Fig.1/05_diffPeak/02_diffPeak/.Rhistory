dim(up.within.amplicon)
dim(up.outside.amplicon)
#--- step2: identify differential accessible peaks for individual ecDNA-harboring tumors ---#
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(data.table)
"%ni%" <- Negate("%in%")
id = "G958_T"
controls <- c("AA9S_T", "G797_T", "G837_T", "G900_T")
unifiedPeak <- fread(paste0("/Users/chupan/Documents/data_su2c/scATAC/unifiedPeak/", id, ".unifiedPeakSet.bed"), header = T) %>%
mutate(geneID = 1:dim(.)[1]) %>% mutate(chr = seqnames, start = start, end = end, strand = strand,  sample = GroupReplicate) %>%
dplyr::select(geneID, chr, start, end, strand, sample) %>% filter(chr != "chrY")
#~~~ generate peak-read matrix
peakCount <- featureCounts(paste0("/Users/chupan/Documents/data_su2c/scATAC/malignbam/", id, ".maligncell.bam"), annot.ext = unifiedPeak,  nthreads = 4, annot.inbuilt = "hg38", isPairedEnd = T)
readCount <- data.frame(count = as.numeric(peakCount$counts)) %>% magrittr::set_colnames(paste0(id))
for(i in 1:length(controls)){
peakCount <- featureCounts(paste0("/Users/chupan/Documents/data_su2c/scATAC/malignbam/", controls[i], ".maligncell.bam"), annot.ext = unifiedPeak,  nthreads = 4, annot.inbuilt = "hg38", isPairedEnd = T)
readCount$tmp <- as.numeric(peakCount$counts)
colnames(readCount)[dim(readCount)[2]] <- controls[i]
}
readCount <- readCount %>% magrittr::set_rownames(paste0(unifiedPeak$chr, ":", unifiedPeak$start, "-", unifiedPeak$end))
dir.create(paste0("outputs.", id))
save(readCount, file = paste0("outputs.", id, "/", id, ".readCount.RData"))
#~~~ peak differential analysis using DEseq2
load(paste0("./outputs.", id, "/", id, ".readCount.RData"))
group1 <- id
group2 <- controls
count <- readCount[ ,c(group1, group2)]
dim(count)
#~~ set condition
condition <- factor(ifelse(colnames(count) %in% group1, 'ecDNA', 'control'))
#--- peak filter
keepPeak <- rowSums(edgeR::cpm(count) > 0) > 0
count <- count[keepPeak, ]
dim(count)
#--- dds matrix
dds <- DESeqDataSetFromMatrix(count, DataFrame(condition), design = ~ condition)
vsd <- vst(dds, blind = F)
plotPCA(vsd)
head(dds)
#~~~ standardization
dds2 <- DESeq(dds, parallel = T)
#~~~ DEseq2 result with removal of NA
fd.thres <- 2
pv.thres <- 0.01
diffPeak <- results(dds2, contrast = c("condition", "ecDNA", "control"), cooksCutoff = FALSE) %>% as.data.frame() %>%
arrange(-log2FoldChange) %>% drop_na(padj) %>% filter(abs(log2FoldChange) > fd.thres & padj < pv.thres)  # select the peaks with significant difference
diffPeak$change = ifelse(diffPeak$padj < pv.thres & abs(diffPeak$log2FoldChange) >= fd.thres, ifelse(diffPeak$log2FoldChange > fd.thres,'Up','Down'), 'Stable')
#~~~ up peaks
up <- diffPeak %>% filter(change == "Up") %>% mutate(peak = rownames(.)) %>% tidyr::separate(peak, sep = ":", into = c("chr","coord")) %>% tidyr::separate(coord, sep = "-", into = c("start", "end")) %>%
mutate(start = as.integer(start)) %>% mutate(end = as.integer(end)) %>%
select(chr, start, end, baseMean, log2FoldChange, lfcSE, stat, pvalue, padj, change) %>%
magrittr::set_rownames(1:dim(.)[1])
#~~~ ecDNA amplicon
fileDir <- list.files(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/"))
selectedFile <- grep(id, fileDir, value = T)
amplicon <- fread(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/", selectedFile[1])) %>% as.data.frame() %>% magrittr::set_colnames(c("chr", "start", "end")) %>% mutate(sample = sub("_.*", "", selectedFile[1]))
if(length(selectedFile) > 1){
for(i in 2:length(selectedFile)){
tmpamplicon <- fread(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/", selectedFile[i])) %>% as.data.frame() %>% magrittr::set_colnames(c("chr", "start", "end")) %>% mutate(sample = sub("_.*", "", selectedFile[i]))
amplicon <- rbind(amplicon, tmpamplicon)
}
}
up.within.amplicon <- bedtoolsr::bt.intersect(up %>% select(chr, start, end), amplicon, wa = T, wb = F) %>% filter(!duplicated(.)) %>% magrittr::set_colnames(c("chr", "start", "end"))
up.outside.amplicon <- anti_join(up, up.within.amplicon, by = c("chr", "start", "end")) %>% select(chr, start, end)
write.table(up, file = paste0("./outputs.", id, "/", id, ".up.bed"), row.names = F, col.names = T, sep = "\t", quote = F)
write.table(up.within.amplicon, file = paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), row.names = F, col.names = F, sep = "\t", quote = F)
write.table(up.outside.amplicon, file = paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), row.names = F, col.names = F, sep = "\t", quote = F)
dim(up.outside.amplicon)
dim(up.within.amplicon)
#--- step2: identify differential accessible peaks for individual ecDNA-harboring tumors ---#
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(data.table)
"%ni%" <- Negate("%in%")
id = "G946_T"
controls <- c("AA9S_T", "G797_T", "G837_T", "G900_T")
unifiedPeak <- fread(paste0("/Users/chupan/Documents/data_su2c/scATAC/unifiedPeak/", id, ".unifiedPeakSet.bed"), header = T) %>%
mutate(geneID = 1:dim(.)[1]) %>% mutate(chr = seqnames, start = start, end = end, strand = strand,  sample = GroupReplicate) %>%
dplyr::select(geneID, chr, start, end, strand, sample) %>% filter(chr != "chrY")
#~~~ generate peak-read matrix
peakCount <- featureCounts(paste0("/Users/chupan/Documents/data_su2c/scATAC/malignbam/", id, ".maligncell.bam"), annot.ext = unifiedPeak,  nthreads = 4, annot.inbuilt = "hg38", isPairedEnd = T)
readCount <- data.frame(count = as.numeric(peakCount$counts)) %>% magrittr::set_colnames(paste0(id))
for(i in 1:length(controls)){
peakCount <- featureCounts(paste0("/Users/chupan/Documents/data_su2c/scATAC/malignbam/", controls[i], ".maligncell.bam"), annot.ext = unifiedPeak,  nthreads = 4, annot.inbuilt = "hg38", isPairedEnd = T)
readCount$tmp <- as.numeric(peakCount$counts)
colnames(readCount)[dim(readCount)[2]] <- controls[i]
}
readCount <- readCount %>% magrittr::set_rownames(paste0(unifiedPeak$chr, ":", unifiedPeak$start, "-", unifiedPeak$end))
dir.create(paste0("outputs.", id))
save(readCount, file = paste0("outputs.", id, "/", id, ".readCount.RData"))
#~~~ peak differential analysis using DEseq2
load(paste0("./outputs.", id, "/", id, ".readCount.RData"))
group1 <- id
group2 <- controls
count <- readCount[ ,c(group1, group2)]
dim(count)
#~~ set condition
condition <- factor(ifelse(colnames(count) %in% group1, 'ecDNA', 'control'))
#--- peak filter
keepPeak <- rowSums(edgeR::cpm(count) > 0) > 0
count <- count[keepPeak, ]
dim(count)
#--- dds matrix
dds <- DESeqDataSetFromMatrix(count, DataFrame(condition), design = ~ condition)
vsd <- vst(dds, blind = F)
plotPCA(vsd)
head(dds)
#~~~ standardization
dds2 <- DESeq(dds, parallel = T)
#~~~ DEseq2 result with removal of NA
fd.thres <- 2
pv.thres <- 0.01
diffPeak <- results(dds2, contrast = c("condition", "ecDNA", "control"), cooksCutoff = FALSE) %>% as.data.frame() %>%
arrange(-log2FoldChange) %>% drop_na(padj) %>% filter(abs(log2FoldChange) > fd.thres & padj < pv.thres)  # select the peaks with significant difference
diffPeak$change = ifelse(diffPeak$padj < pv.thres & abs(diffPeak$log2FoldChange) >= fd.thres, ifelse(diffPeak$log2FoldChange > fd.thres,'Up','Down'), 'Stable')
#~~~ up peaks
up <- diffPeak %>% filter(change == "Up") %>% mutate(peak = rownames(.)) %>% tidyr::separate(peak, sep = ":", into = c("chr","coord")) %>% tidyr::separate(coord, sep = "-", into = c("start", "end")) %>%
mutate(start = as.integer(start)) %>% mutate(end = as.integer(end)) %>%
select(chr, start, end, baseMean, log2FoldChange, lfcSE, stat, pvalue, padj, change) %>%
magrittr::set_rownames(1:dim(.)[1])
#~~~ ecDNA amplicon
fileDir <- list.files(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/"))
selectedFile <- grep(id, fileDir, value = T)
amplicon <- fread(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/", selectedFile[1])) %>% as.data.frame() %>% magrittr::set_colnames(c("chr", "start", "end")) %>% mutate(sample = sub("_.*", "", selectedFile[1]))
if(length(selectedFile) > 1){
for(i in 2:length(selectedFile)){
tmpamplicon <- fread(paste0("/Users/chupan/Documents/data_su2c/WGS/AA/", selectedFile[i])) %>% as.data.frame() %>% magrittr::set_colnames(c("chr", "start", "end")) %>% mutate(sample = sub("_.*", "", selectedFile[i]))
amplicon <- rbind(amplicon, tmpamplicon)
}
}
up.within.amplicon <- bedtoolsr::bt.intersect(up %>% select(chr, start, end), amplicon, wa = T, wb = F) %>% filter(!duplicated(.)) %>% magrittr::set_colnames(c("chr", "start", "end"))
up.outside.amplicon <- anti_join(up, up.within.amplicon, by = c("chr", "start", "end")) %>% select(chr, start, end)
write.table(up, file = paste0("./outputs.", id, "/", id, ".up.bed"), row.names = F, col.names = T, sep = "\t", quote = F)
write.table(up.within.amplicon, file = paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), row.names = F, col.names = F, sep = "\t", quote = F)
write.table(up.outside.amplicon, file = paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), row.names = F, col.names = F, sep = "\t", quote = F)
dim(up.within.amplicon)
dim(up.outside.amplicon)
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "A7TK_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "A7TK_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "A7TK_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "G933_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "G946_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
#--- workflow of differential peak analysis: union (i.e., consensus) peak -> featureCounts -> DEseq2
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(Rsubread)
library(ggplot2)
library(ggpubr)
library(data.table)
"%ni%" <- Negate("%in%")
id = "G958_T"
up <- fread(paste0("./outputs.", id, "/", id, ".up.bed"), header = T, data.table = F, stringsAsFactors = F) %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.outside.amplicon <- fread(paste0("./outputs.", id, "/", id, ".up.outside.amplicon.bed"), header = F, data.table = F, stringsAsFactors = F) %>%
{colnames(.) = c("chr", "start", "end");.} %>% mutate(peak = paste0(chr, ":", start, "-", end))
up.within.amplicon.fc <- up %>% inner_join(up.within.amplicon, by = "peak") %>% mutate(type = "within")
up.outside.amplicon.fc <- up %>% inner_join(up.outside.amplicon, by = "peak") %>% mutate(type = "outside")
peak.matrix <- rbind(up.within.amplicon.fc, up.outside.amplicon.fc) %>% dplyr::select(log2FoldChange, type)
peak.df <- reshape2::melt(peak.matrix) %>% as.data.frame() %>% mutate(variable = as.factor(variable))
counts <- as.data.frame(table(peak.df$type))
colnames(counts) <- c("type", "n")
dir.create("outputs.foldchange")
pal = c("G958_T" = "purple",
"G946_T" = "orchid",
"G933_T" = "orange",
"A7TK_T" = "salmon",
"G900_T" = "yellowgreen",
"G837_T" = "olivedrab",
"G797_T" = "navy",
"AA9S_T" = "darkgreen")
pdf(paste0("./outputs.foldchange/", id, ".foldchange.pdf"), width = 1.35, height = 2.35)
ggplot(peak.df, aes(x = type , y = value, fill = type)) +
theme_bw() +
geom_boxplot(width = 0.6, size = 0.35,   outlier.shape = NA) +
#geom_jitter(width = 0.2, size = 0.1, alpha = 0.7, color = "black") +
scale_fill_manual(values = c("#CCFF00B3", "#FF0099B3")) +
labs(title = NULL, x = paste0(id), y = "log2FC") +
geom_text(data = counts, aes(x = type, y = 6, label = n),
inherit.aes = FALSE, size = 3) +
theme(axis.text.x = element_blank(),
legend.position = "none",
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
stat_compare_means(method = "wilcox.test", label = "p.format")
dev.off()
rm(list = ls())
library(tidyr)
library(dplyr)
library(DESeq2)
library(ggplot2)
library(Rsubread)
library(data.table)
library(bedtoolsr)
library(ChIPseeker)
library(GenomicRanges)
library(clusterProfiler)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
ids = c("A7TK_T", "G933_T", "G946_T", "G958_T")
fileGrList <- lapply(ids, function(id){
fread(paste0("./outputs.", id, "/", id, ".up.within.amplicon.bed")) %>% {colnames(.) = c("chr", "start", "end");.} %>% GRanges()
})
names(fileGrList) <- ids
peakAnnoList <- lapply(fileGrList, annotatePeak, TxDb = TxDb.Hsapiens.UCSC.hg38.knownGene, annoDb = "org.Hs.eg.db",
tssRegion = c(-3000, 3000), genomicAnnotationPriority = c("Promoter", "5UTR", "3UTR", "Exon", "Intron", "Downstream", "Intergenic"))
p0 <- plotAnnoBar(peakAnnoList) + theme(legend.position = "right") + labs(title = "")
# Build the plot to access its data
pbuilt <- ggplot_build(p0)
# Extract fill colors used for bars
fill_colors <- unique(pbuilt$data[[1]]$fill)
fill_colors
c("#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a")
annoStat <- lapply(peakAnnoList, function(df) df@annoStat)
annostat <- annoStat[[1]] %>% magrittr::set_colnames(c("Feature", names(annoStat)[1]))
for(i in 2:length(annoStat)){
annostat <- annostat %>% full_join(annoStat[[i]], join_by(Feature))
colnames(annostat)[dim(annostat)[2]] <- names(annoStat)[i]
}
annostat[is.na(annostat)] <- 0
class(annostat)
df <- annostat
df <- df %>% mutate(Feature = sub("\\s*\\([^)]+\\)", "", Feature))
df <- df %>% mutate(Feature = sub(".*\\b(Exon)\\b.*", "\\1", Feature)) #Exon
df <- df %>% mutate(Feature = sub(".*\\b(Intron)\\b.*", "\\1", Feature)) #Intron
for(i in 1:dim(df)[1]){
if(df$Feature[i] == "Promoter") df$Feature[i] <- 1
if(df$Feature[i] == "3' UTR") df$Feature[i] <- 2
if(df$Feature[i] == "5' UTR") df$Feature[i] <- 3
if(df$Feature[i] == "Exon") df$Feature[i] <- 4
if(df$Feature[i] == "Intron") df$Feature[i] <- 5
if(df$Feature[i] %in% "Distal Intergenic") df$Feature[i] <- 6
}
annostat.df <- df %>% group_by(Feature) %>% summarize(across(everything(), sum, na.rm = TRUE)) %>% ungroup() %>% as.data.frame()
annostat.df <- annostat.df %>% pivot_longer(cols = -Feature, names_to = "Sample", values_to = "Percentage") %>% as.data.frame()
pdf(paste0("./outputs.foldchange/peakAnnotation.pdf"), width = 3.5, height = 3.25)
p <- ggplot(annostat.df, aes(x = Sample, y = Percentage, fill = as.factor(Feature))) +
theme_bw() +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("1" = "#3F51B5FF", "2" = "#1f78b4", "3" = '#b2df8a', "4" = "#33a02c", "5" = "#9C27B0FF", "6" = "#e31a1c"),
labels = c("Promoter", "3' UTR", "5' UTR", "Exon", "Intron", "Distal Intergenic"))  +
labs(title = NULL, x = NULL, y = "Percentage", fill = "Feature") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = "black"),
axis.text.y = element_text(color = "black"),
legend.text = element_text(size = 10, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5, "cm"))
p
dev.off()
dir.create("outputs.annotation")
pdf(paste0("./outputs.annotation/peakAnnotation.pdf"), width = 3.5, height = 3.25)
p <- ggplot(annostat.df, aes(x = Sample, y = Percentage, fill = as.factor(Feature))) +
theme_bw() +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("1" = "#3F51B5FF", "2" = "#1f78b4", "3" = '#b2df8a', "4" = "#33a02c", "5" = "#9C27B0FF", "6" = "#e31a1c"),
labels = c("Promoter", "3' UTR", "5' UTR", "Exon", "Intron", "Distal Intergenic"))  +
labs(title = NULL, x = NULL, y = "Percentage", fill = "Feature") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = "black"),
axis.text.y = element_text(color = "black"),
legend.text = element_text(size = 10, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5, "cm"))
p
dev.off()
dir.create("outputs.annotation")
pdf(paste0("./outputs.annotation/DAP.annotation.pdf"), width = 3.5, height = 3.25)
p <- ggplot(annostat.df, aes(x = Sample, y = Percentage, fill = as.factor(Feature))) +
theme_bw() +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("1" = "#3F51B5FF", "2" = "#1f78b4", "3" = '#b2df8a', "4" = "#33a02c", "5" = "#9C27B0FF", "6" = "#e31a1c"),
labels = c("Promoter", "3' UTR", "5' UTR", "Exon", "Intron", "Distal Intergenic"))  +
labs(title = NULL, x = NULL, y = "Percentage", fill = "Feature") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, color = "black"),
axis.text.y = element_text(color = "black"),
legend.text = element_text(size = 10, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5, "cm"))
p
dev.off()
