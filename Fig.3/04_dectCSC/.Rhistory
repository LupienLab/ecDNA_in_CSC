#~~~~ step4: identify CSC from GBM ~~~#
rm(list = ls())
library(MASS)
library(ggplot2)
library(dplyr)
set.seed(1)
# load SVD data
SVD_df <- readRDS(file = paste0("outputs/integrate_SVD.rds"))
data1 <- SVD_df %>% filter(type == "T")
data2 <- SVD_df %>% filter(type == "L")
dens1 <- kde2d(data1$SV2, data1$SV3, n = 250)
dens2 <- kde2d(data2$SV2, data2$SV3, n = 250)
# define a function to find the density at given points
find_density <- function(x, y, dens) {
x_id <- findInterval(x, dens$x)
y_id <- findInterval(y, dens$y)
dens$z[cbind(x_id, y_id)]
}
# combine the two datasets to check for overlap points
combined_data <- rbind(data1, data2)
# calculate density values for each point from both density fields
combined_data$density1 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens1))
combined_data$density2 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens2))
# identify cells within the overlapping region where both densities exceed their thresholds (0.65)
threshold1 <- quantile(dens1$z, probs = 0.65)
threshold2 <- quantile(dens2$z, probs = 0.65)
overlap_cells <- subset(combined_data, density1 >= threshold1 & density2 >= threshold2)
table(overlap_cells$sample)
overlap_cells
dim(overlap_cells)
#~~~~ step4: identify CSC from GBM ~~~#
rm(list = ls())
library(MASS)
library(ggplot2)
library(dplyr)
set.seed(1)
# load SVD data
SVD_df <- readRDS(file = paste0("outputs/integrate_SVD.rds"))
data1 <- SVD_df %>% filter(type == "T")
data2 <- SVD_df %>% filter(type == "L")
dens1 <- kde2d(data1$SV2, data1$SV3, n = 250)
dens2 <- kde2d(data2$SV2, data2$SV3, n = 250)
# define a function to find the density at given points
find_density <- function(x, y, dens) {
x_id <- findInterval(x, dens$x)
y_id <- findInterval(y, dens$y)
dens$z[cbind(x_id, y_id)]
}
# combine the two datasets to check for overlap points
combined_data <- rbind(data1, data2)
# calculate density values for each point from both density fields
combined_data$density1 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens1))
combined_data$density2 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens2))
# identify cells within the overlapping region where both densities exceed their thresholds (0.65)
threshold1 <- quantile(dens1$z, probs = 0.65)
threshold2 <- quantile(dens2$z, probs = 0.65)
overlap_cells <- subset(combined_data, density1 >= threshold1 & density2 >= threshold2)
SVD_df
head(SVD_df)
head(overlap_cells)
#~~~~ step4: identify CSC from GBM ~~~#
rm(list = ls())
library(MASS)
library(ggplot2)
library(dplyr)
set.seed(1)
# load SVD data
SVD_df <- readRDS(file = paste0("outputs/integrate_SVD.rds"))
data1 <- SVD_df %>% filter(type == "T")
data2 <- SVD_df %>% filter(type == "L")
dens1 <- kde2d(data1$SV2, data1$SV3, n = 250)
dens2 <- kde2d(data2$SV2, data2$SV3, n = 250)
# define a function to find the density at given points
find_density <- function(x, y, dens) {
x_id <- findInterval(x, dens$x)
y_id <- findInterval(y, dens$y)
dens$z[cbind(x_id, y_id)]
}
# combine the two datasets to check for overlap points
combined_data <- rbind(data1, data2)
# calculate density values for each point from both density fields
combined_data$density1 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens1))
combined_data$density2 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens2))
# identify cells within the overlapping region where both densities exceed their thresholds (0.65)
threshold1 <- quantile(dens1$z, probs = 0.65)
threshold2 <- quantile(dens2$z, probs = 0.65)
overlap_cells <- subset(combined_data, density1 >= threshold1 & density2 >= threshold2)
SVD_df <- SVD_df %>% mutate(celltype = ifelse(barcode %in% overlap_cells$barcode, "CSC", "non-CSC"))
table(SVD_df$celltype)
table(SVD_df$celltype, SVD_df$type)
table(SVD_df$celltype, SVD_df$sample)
View(SVD_df)
#~~~~ step4: identify CSC from GBM ~~~#
rm(list = ls())
library(MASS)
library(ggplot2)
library(dplyr)
set.seed(1)
# load SVD data
SVD_df <- readRDS(file = paste0("outputs/integrate_SVD.rds"))
data1 <- SVD_df %>% filter(type == "T")
data2 <- SVD_df %>% filter(type == "L")
dens1 <- kde2d(data1$SV2, data1$SV3, n = 250)
dens2 <- kde2d(data2$SV2, data2$SV3, n = 250)
# define a function to find the density at given points
find_density <- function(x, y, dens) {
x_id <- findInterval(x, dens$x)
y_id <- findInterval(y, dens$y)
dens$z[cbind(x_id, y_id)]
}
# combine the two datasets to check for overlap points
combined_data <- rbind(data1, data2)
# calculate density values for each point from both density fields
combined_data$density1 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens1))
combined_data$density2 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens2))
# identify cells within the overlapping region where both densities exceed their thresholds (0.65)
threshold1 <- quantile(dens1$z, probs = 0.65)
threshold2 <- quantile(dens2$z, probs = 0.65)
overlap_cells <- subset(combined_data, density1 >= threshold1 & density2 >= threshold2)
table(overlap_cells$sample)
SVD_df <- SVD_df %>% mutate(celltype = ifelse(barcode %in% overlap_cells$barcode, "CSC", "non-CSC"))
write.table(SVD_df, file = "./outputs/SVD_cell.txt", row.names = F, col.names = T, sep = "\t", quote = F)
#~~~~ step4: identify CSC from GBM ~~~#
rm(list = ls())
library(MASS)
library(ggplot2)
library(dplyr)
set.seed(1)
# load SVD data
SVD_df <- readRDS(file = paste0("outputs/integrate_SVD.rds"))
data1 <- SVD_df %>% filter(type == "T")
data2 <- SVD_df %>% filter(type == "L")
dens1 <- kde2d(data1$SV2, data1$SV3, n = 250)
dens2 <- kde2d(data2$SV2, data2$SV3, n = 250)
# define a function to find the density at given points
find_density <- function(x, y, dens) {
x_id <- findInterval(x, dens$x)
y_id <- findInterval(y, dens$y)
dens$z[cbind(x_id, y_id)]
}
# combine the two datasets to check for overlap points
combined_data <- rbind(data1, data2)
# calculate density values for each point from both density fields
combined_data$density1 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens1))
combined_data$density2 <- mapply(find_density, combined_data$SV2, combined_data$SV3, MoreArgs = list(dens = dens2))
# identify cells within the overlapping region where both densities exceed their thresholds (0.65)
threshold1 <- quantile(dens1$z, probs = 0.65)
threshold2 <- quantile(dens2$z, probs = 0.65)
overlap_cells <- subset(combined_data, density1 >= threshold1 & density2 >= threshold2)
table(overlap_cells$sample)
SVD_df <- SVD_df %>% mutate(celltype = ifelse(barcode %in% overlap_cells$barcode, "CSC", "non-CSC"))
write.table(SVD_df, file = "./outputs/SVD_CSCs.txt", row.names = F, col.names = T, sep = "\t", quote = F)
saveRDS(overlap_cells, file = paste0("outputs/overlap_cells.rds"))
#~~~ overlapping cells from the GBM side
pdf(paste0("./outputs.SVD/cell_overlap_GBM.pdf"), width = 3.5, height = 3.25)
p0 <- ggplot(combined_data, aes(x = SV2, y = SV3)) +
theme_bw() +
stat_density_2d(data = data1, aes(x = SV2, y = SV3, color = "T"), geom = "contour", bins = 200) +
stat_density_2d(data = data2, aes(x = SV2, y = SV3, color = "L"), geom = "contour", bins = 200) +
geom_point(data = overlap_cells %>% dplyr::filter(type == "T"), aes(x = SV2, y = SV3, color = "CSC"), size = 0.15) +
scale_color_manual(values = c("T" = "red", "L" = "purple", "CSC" = "blue")) +
labs(x = "SV2", y = "SV3", color = "Cell type") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "none",
axis.text.x = element_text(size = 10, colour = "black"),
axis.text.y = element_text(size = 10, colour = "black"))
p0
dev.off()
#~~~ overlapping for GSC
pdf(paste0("./outputs.SVD/cell_overlap_GSC.pdf"), width = 3.5, height = 3.5)
p0 <- ggplot(combined_data, aes(x = SV2, y = SV3)) +
theme_bw() +
stat_density_2d(data = data1, aes(x = SV2, y = SV3, color = "T"), geom = "contour", bins = 200) +
stat_density_2d(data = data2, aes(x = SV2, y = SV3, color = "L"), geom = "contour", bins = 200) +
geom_point(data = overlap_cells %>% dplyr::filter(type == "L"), aes(x = SV2, y = SV3, color = "CSC"), size = 0.15) +
scale_color_manual(values = c("T" = "red", "L" = "purple", "CSC" = "blue")) +
labs(x = "SV2", y = "SV3", color = "Cell type") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "none",
axis.text.x = element_text(size = 10, colour = "black"),
axis.text.y = element_text(size = 10, colour = "black"))
p0
dev.off()
#~~~ cells from GSC side
pdf(paste0("./outputs.SVD/cell_within_GSC.pdf"), width = 3.5, height = 3.5)
p0 <- ggplot(data2, aes(x = SV2, y = SV3, color = sample)) +
theme_bw() +
geom_point(size = 0.15) +
scale_color_manual(values = c("G523_L" = "#7CAE00", "G620_L" = "#B79F00",
"G828_L" = "#619CFF", "G583_L" = "#F564E3",
"G797_L" = "#00BA38", "G837_L" = "#00BFC4")) +
labs(x = "SV2", y = "SV3", color = "Cell type") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "none",
axis.text.x = element_text(size = 10, colour = "black"),
axis.text.y = element_text(size = 10, colour = "black"))
p0
dev.off()
