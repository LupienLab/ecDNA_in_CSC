}
#~~~ step3: merge seurat objects with merge.data = FALSE
merged_seurat <- Reduce(function(x, y) merge(x, y, merge.data = FALSE), samples)
rm(list = ls())
library(Seurat) #~~~ packageVersion("Seurat")
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
readRDS("./object_merged/merged_seurat.rds")
#~~~ checks after merging
Assays(merged_seurat)
table(merged_seurat$orig.ident)
#~~~ checks after merging
merged_seurat <- readRDS("./object_merged/merged_seurat.rds")
Assays(merged_seurat)
table(merged_seurat$orig.ident)
#~~~ PCA
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
#~~~ RNA ~~~#
print("Conducting dimensionality reduction on RNA...")
DefaultAssay(merged_seurat) <- "RNA"
merged_seurat <- NormalizeData(merged_seurat)
merged_seurat <- FindVariableFeatures(merged_seurat)
merged_seurat <- ScaleData(merged_seurat)
merged_seurat <- RunPCA(merged_seurat) %>% RunUMAP(dims = 1:30, reduction.name = 'umap.rna', reduction.key = 'rnaUMAP_')
#~~~ PCA
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
pca_df$sample <- merged_seurat$id
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = "PC1", y = "PC2", title = "PCA Plot") +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
#~~~ PCA
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
pca_df$sample <- merged_seurat$id
pca_var <- Stdev(merged_seurat, "pca")^2
pca_var_exp <- round(pca_var / sum(pca_var) * 100, 1)  # percentage variance explained
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1 (", pca_var_exp[1], "%)"),
y = paste0("PC2 (", pca_var_exp[2], "%)"),
title = "PCA Plot") +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = "PCA Plot") +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
pdf(paste0("./object_merged/pca_rna_merged.pdf"), width = 3.5, height = 3.5)
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = NULL) +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
dev.off()
rm(list = ls())
library(eulerr)
fit1 <- euler(c(
"A" = 25,
"B" = 5,
"C" = 5,
"A&B" = 5,
"A&C" = 5,
"B&C" = 3,
"A&B&C" = 3
))
# Input as a matrix of logicals
set.seed(1)
mat <- cbind(
A = sample(c(TRUE, TRUE, FALSE), 50, TRUE),
B = sample(c(TRUE, FALSE), 50, TRUE),
C = sample(c(TRUE, FALSE, FALSE, FALSE), 50, TRUE)
)
fit2 <- euler(mat)
plot(fit2)
plot(fit1)
rm(list = ls())
library(eulerr)
fit1 <- euler(c(
"A" = 2,
"B" = 6,
"C" = 18,
"A&B" = 57,
"A&C" = 150,
"B&C" = 83,
"A&B&C" = 3758
))
plot(fit1)
716/(716+4033)
(73.18+76.12+83.77+82.50+84.92+85.66+97.03)/7
#******** step1: create Seurat object for individual GSC cultures ********#
rm(list = ls())
library(Seurat) #~~~ packageVersion("Seurat") 5.2.1
library(Signac) #~~~
library(dplyr)
library(ggplot2)
library(patchwork)
library(GenomicRanges)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
id = "G523_L" ## G523_L  G583_L  G620_L  G797_L  G828_L  G837_L
packageVersion("Seurat")
packageVersion("Signac")
#******** step1: create Seurat object for individual GSC cultures ********#
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac) #~~~ 1.14.0
library(dplyr)
library(ggplot2)
library(patchwork)
library(GenomicRanges)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
id = "G523_L" ## G523_L  G583_L  G620_L  G797_L  G828_L  G837_L
#~~~ load scRNA-seq counts
rna_counts <- Read10X(data.dir = paste0("/Users/chupan/Documents/data_su2c/scMulti/cellranger-arc/", id, "/filtered_feature_bc_matrix"))
seurat_obj <- CreateSeuratObject(counts = rna_counts$`Gene Expression`, assay = "RNA")
#~~~ load scATAC-seq fragments
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
seqlevelsStyle(annotations) <- "UCSC"
genome(annotations) <- "hg38"
fragments <- paste0("/Users/chupan/Documents/data_su2c/scMulti/cellranger-arc/", id, "/atac_fragments.tsv.gz")
chrom_assay <- CreateChromatinAssay(counts = rna_counts$Peaks, sep = c(":", "-"), genome = 'hg38', fragments = fragments, annotation = annotations, min.cells = 10, min.features = 200)
seurat_obj[["ATAC"]] <- chrom_assay
#~~~ QC --- RNA
DefaultAssay(seurat_obj) <- "RNA"
seurat_obj[["percent.mt"]] <- PercentageFeatureSet(seurat_obj, pattern = "^MT-", assay = "RNA")
length(seurat_obj$orig.ident)
#~~~ visualize QC metrics
VlnPlot(seurat_obj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
seurat_obj <- subset(seurat_obj, subset = nFeature_RNA > 500 & nFeature_RNA < 8000 & percent.mt < 20) #subset = nFeature_RNA > 500 & nFeature_RNA < 8000 & percent.mt < 20
length(seurat_obj$orig.ident)
#~~~ QC --- ATAC
DefaultAssay(seurat_obj) <- "ATAC"
seurat_obj <- NucleosomeSignal(seurat_obj)
seurat_obj <- TSSEnrichment(seurat_obj, fast = FALSE)
length(seurat_obj$orig.ident)
# visualize
VlnPlot(seurat_obj, features = c("nCount_RNA", "nCount_ATAC", "TSS.enrichment", "nucleosome_signal"), ncol = 4, pt.size = 0)
seurat_obj <- subset(seurat_obj, subset = nCount_ATAC > 4000 & nCount_ATAC < 80000 & nucleosome_signal < 2 & TSS.enrichment > 2)
length(seurat_obj$orig.ident)
seurat_obj$id <- id
write.table(names(seurat_obj$orig.ident), file = paste0("./filtercell/", id, ".filtercell.txt"), row.names = F, col.names = F, sep = "\t", quote = F)
length(seurat_obj$orig.ident)
# save results
dir.create(paste0("outputs.", id))
write.table(names(seurat_obj$orig.ident), file = paste0("./outputs.", id, "/", id, ".filtercell.txt"), row.names = F, col.names = F, sep = "\t", quote = F)
saveRDS(seurat_obj, file = paste0("./outputs.", id, "/", id, ".rds"))
#******** step1: create Seurat object for individual GSC cultures ********#
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac) #~~~ 1.14.0
library(dplyr)
library(ggplot2)
library(patchwork)
library(GenomicRanges)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
id = "G523_L" ## G523_L  G583_L  G620_L  G797_L  G828_L  G837_L
#~~~ load scRNA-seq counts
rna_counts <- Read10X(data.dir = paste0("/Users/chupan/Documents/data_su2c/scMulti/cellranger-arc/", id, "/filtered_feature_bc_matrix"))
seurat_obj <- CreateSeuratObject(counts = rna_counts$`Gene Expression`, assay = "RNA")
#~~~ load scATAC-seq fragments
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)
seqlevelsStyle(annotations) <- "UCSC"
genome(annotations) <- "hg38"
fragments <- paste0("/Users/chupan/Documents/data_su2c/scMulti/cellranger-arc/", id, "/atac_fragments.tsv.gz")
chrom_assay <- CreateChromatinAssay(counts = rna_counts$Peaks, sep = c(":", "-"), genome = 'hg38', fragments = fragments, annotation = annotations, min.cells = 10, min.features = 200)
seurat_obj[["ATAC"]] <- chrom_assay
#~~~ QC for the RNA side
DefaultAssay(seurat_obj) <- "RNA"
seurat_obj[["percent.mt"]] <- PercentageFeatureSet(seurat_obj, pattern = "^MT-", assay = "RNA")
length(seurat_obj$orig.ident)
#~~~ visualize QC metrics
VlnPlot(seurat_obj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
seurat_obj <- subset(seurat_obj, subset = nFeature_RNA > 500 & nFeature_RNA < 8000 & percent.mt < 20) #subset = nFeature_RNA > 500 & nFeature_RNA < 8000 & percent.mt < 20
length(seurat_obj$orig.ident)
#~~~ QC for the ATAC side
DefaultAssay(seurat_obj) <- "ATAC"
seurat_obj <- NucleosomeSignal(seurat_obj)
seurat_obj <- TSSEnrichment(seurat_obj, fast = FALSE)
length(seurat_obj$orig.ident)
# visualize
VlnPlot(seurat_obj, features = c("nCount_RNA", "nCount_ATAC", "TSS.enrichment", "nucleosome_signal"), ncol = 4, pt.size = 0)
seurat_obj <- subset(seurat_obj, subset = nCount_ATAC > 4000 & nCount_ATAC < 80000 & nucleosome_signal < 2 & TSS.enrichment > 2)
seurat_obj$id <- id
# save results
dir.create(paste0("outputs.", id))
write.table(names(seurat_obj$orig.ident), file = paste0("./outputs.", id, "/", id, ".filtercell.txt"), row.names = F, col.names = F, sep = "\t", quote = F)
saveRDS(seurat_obj, file = paste0("./outputs.", id, "/", id, ".rds"))
length(seurat_obj$orig.ident)
(seurat_obj$orig.ident)
names(seurat_obj$orig.ident)
length(names(seurat_obj$orig.ident))
packageVersion("Seurat")
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ step1: load all Seurat objects into a named list
rds_files <- list.files("./object/", pattern = "\\.rds$", recursive = FALSE, full.names = TRUE)
rds_files
samples <- list()
for(file_path in rds_files){
seurat_object <- readRDS(file_path)
file_name <- tools::file_path_sans_ext(basename(file_path))
samples[[file_name]] <- seurat_object
}
#~~~ step2: merge all Seurat objects using Reduce function
for (i in seq_along(samples)) {
DefaultAssay(samples[[i]]) <- "RNA"
sample_id <- names(samples)[i]
samples[[i]] <- RenameCells(samples[[i]], new.names = paste0(sample_id, "|", Cells(samples[[i]])))
}
#~~~ step3: merge seurat objects with merge.data = FALSE
merged_seurat <- Reduce(function(x, y) merge(x, y, merge.data = FALSE), samples)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
merged_seurat_obj$orig.ident
length(merged_seurat_obj$orig.ident)
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df
SVD_df$barcode
length(SVD_df$barcode)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
tmp_obj
#~~~ input stemdata
dir.create("outputs.GSC" , showWarnings = FALSE)
tmp_obj@meta.data
head(tmp_obj@meta.data)
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', slot ='counts')
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', layer = 'counts')
writeMM(counts_matrix, file =  "./outputs.GSC/seurat_obj_counts.mtx")
dir.create("outputs.GSC" , showWarnings = FALSE)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
write.csv(tmp_obj@meta.data, file = "./outputs.GSC/seurat_obj_metadata.csv", quote = F, row.names = F)
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', layer = 'counts')
writeMM(counts_matrix, file =  "./outputs.GSC/seurat_obj_counts.mtx")
# write gene names
write.table(data.frame('gene' = rownames(counts_matrix)), file = "./outputs.GSC/seurat_obj_gene_names.csv", quote = F, row.names = F, col.names = F)
#~~~ save data sets for velocity analysis
dir.create("outputs.velocity" , showWarnings = FALSE)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
write.csv(tmp_obj@meta.data, file = "./outputs.velocity/seurat_obj_metadata.csv", quote = F, row.names = F)
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', layer = 'counts')
writeMM(counts_matrix, file =  "./outputs.velocity/seurat_obj_counts.mtx")
# write gene names
write.table(data.frame('gene' = rownames(counts_matrix)), file = "./outputs.velocity/seurat_obj_gene_names.csv", quote = F, row.names = F, col.names = F)
packageVersion("Seurat")
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ checks after merging
merged_seurat <- readRDS("./object_merged/merged_seurat.rds")
Assays(merged_seurat)
table(merged_seurat$orig.ident)
#~~~ PCA
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
pca_df$sample <- merged_seurat$id
pca_var <- Stdev(merged_seurat, "pca")^2
pca_var_exp <- round(pca_var / sum(pca_var) * 100, 1)  # percentage variance explained
pdf(paste0("./object_merged/pca_rna_merged.pdf"), width = 3.5, height = 3.5)
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = NULL) +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
dev.off()
#~~~ PCA
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
merged_seurat
#~~~ RNA ~~~#
print("Conducting dimensionality reduction on RNA...")
DefaultAssay(merged_seurat) <- "RNA"
merged_seurat <- NormalizeData(merged_seurat)
merged_seurat <- FindVariableFeatures(merged_seurat)
merged_seurat <- ScaleData(merged_seurat)
merged_seurat <- RunPCA(merged_seurat) %>% RunUMAP(dims = 1:30, reduction.name = 'umap.rna', reduction.key = 'rnaUMAP_')
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
pca_df$sample <- merged_seurat$id
pca_var <- Stdev(merged_seurat, "pca")^2
pca_var_exp <- round(pca_var / sum(pca_var) * 100, 1)  # percentage variance explained
pdf(paste0("./object_merged/pca_rna_merged.pdf"), width = 3.5, height = 3.5)
#~~~ plot PC1 vs PC2 colored by sample (id: G523, G583, G620, G797, G828, G837)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = NULL) +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
dev.off()
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ checks after merging
merged_seurat <- readRDS("./object_merged/merged_seurat.rds")
Assays(merged_seurat)
table(merged_seurat$orig.ident)
#~~~ extract PCA embeddings (coordinates of each cell in PC space)
DefaultAssay(merged_seurat) <- "RNA"
merged_seurat <- NormalizeData(merged_seurat)
merged_seurat <- FindVariableFeatures(merged_seurat)
merged_seurat <- ScaleData(merged_seurat)
merged_seurat <- RunPCA(merged_seurat) %>% RunUMAP(dims = 1:30, reduction.name = 'umap.rna', reduction.key = 'rnaUMAP_')
pca_df <- as.data.frame(Embeddings(merged_seurat, "pca"))
pca_df$sample <- merged_seurat$id
pca_var <- Stdev(merged_seurat, "pca")^2
pca_var_exp <- round(pca_var / sum(pca_var) * 100, 1)  # percentage variance explained
pdf(paste0("./object_merged/pca_rna_merged.pdf"), width = 3.5, height = 3.5)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = NULL) +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
dev.off()
pdf(paste0("./object_merged/PCA_integrate_RNA.pdf"), width = 3.5, height = 3.5)
p2 <- ggplot(pca_df, aes(x = PC_1, y = PC_2, color = sample)) + theme_bw() +
geom_point(size = 1, alpha = 1) +
labs(x = paste0("PC1:", pca_var_exp[1], "% variance"),
y = paste0("PC2:", pca_var_exp[2], "% variance"),
title = NULL) +
scale_color_manual(values = c("G523_L" = "#1f77b4", "G620_L" = "#2ca02c", "G828_L" = "#9467bd",
"G583_L" = "#ff7f0e", "G797_L" = "#d62728", "G837_L" = "#8c564b")) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p2
dev.off()
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ save data sets for velocity analysis
dir.create("outputs.velocity" , showWarnings = FALSE)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
write.csv(tmp_obj@meta.data, file = "./outputs.velocity/seurat_obj_metadata.csv", quote = F, row.names = F)
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', layer = 'counts')
writeMM(counts_matrix, file =  "./outputs.velocity/seurat_obj_counts.mtx")
# write gene names
write.table(data.frame('gene' = rownames(counts_matrix)), file = "./outputs.velocity/seurat_obj_gene_names.csv", quote = F, row.names = F, col.names = F)
pwd
getwd()
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ save data sets for velocity analysis
dir.create("outputs.velocity" , showWarnings = FALSE)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
write.csv(tmp_obj@meta.data, file = "./outputs.velocity/seurat_obj_metadata.csv", quote = F, row.names = F)
DefaultAssay(tmp_obj) <- "RNA"
counts_matrix <- GetAssayData(tmp_obj, assay='RNA', layer = 'counts')
writeMM(counts_matrix, file =  "./outputs.velocity/seurat_obj_counts.mtx")
# write gene names
write.table(data.frame('gene' = rownames(counts_matrix)), file = "./outputs.velocity/seurat_obj_genenames.csv", quote = F, row.names = F, col.names = F)
dim(tmp_obj$orig.ident)
length(tmp_obj$orig.ident)
dim(counts_matrix)
getwd()
rm(list = ls())
library(Seurat) #~~~ 5.2.1
library(Signac)
library(dplyr)
library(Matrix)
library(ggplot2)
library(patchwork)
library(GenomeInfoDb)
library(EnsDb.Hsapiens.v86)
library(BSgenome.Hsapiens.UCSC.hg38)
#~~~ save data sets for velocity analysis
dir.create("outputs.velocity" , showWarnings = FALSE)
merged_seurat_obj <- readRDS("./object_merged/merged_seurat.rds")
tmp_obj <- merged_seurat_obj
tmp_obj$barcode <- colnames(tmp_obj)
SVD_df <- readRDS(file = paste0("/Users/chupan/Documents/data_su2c/scATAC/CSC/integrate_SVD.rds")) %>% dplyr::filter(type == "L") %>% mutate(barcode = gsub("#", "|", barcode))
SVD_df_ranked <- SVD_df[match(colnames(tmp_obj), SVD_df$barcode), ]
tmp_obj$SV_1 <- SVD_df_ranked$SV2
tmp_obj$SV_2 <- SVD_df_ranked$SV3
(99.8+97.23+95.69+98.38+94.49+97.89+97.55)/7
