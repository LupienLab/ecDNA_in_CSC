library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
View(qBF)
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
altTFs <- data.frame(ptf = c("POU3F3",  "POU4F1",  "POU5F2",  "POU6F2",  "POU2F1",  "POU3F4",  "POU2F3",  "POU2F2",  "POU4F3",  "POU1F1", "POU4F2", "POU3F1", "POU6F1", "POU3F2", "POU2AF1"),
otf = c("BRN1",   "BRN3A",    "POU5F2",  "RPF-1",   "OCT1",    "BRN4",    "OCT11",   "OCT2",    "BRN3C",   "PIT1",   "BRN3B",  "OCT6",   "BRN5",   "OCT7",   "OBF1"))
tfs <- c(soxTFs, klfTFs, pouTFs, rfxTFs, vaxTFs, salTFs, vaxTFs, heyTFs, asclTFs, oliTFs)
qBF <- qBF %>% filter(Gene %in% tfs)
qBF
View(qBF)
qBF
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
qBF$Gene
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
soxTFs
klfTFs
vaxTFs
rfxTFs
salTFs
heyTFs
asclTFs
pouTFs
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
altTFs <- data.frame(ptf = c("POU3F3",  "POU4F1",  "POU5F2",  "POU6F2",  "POU2F1",  "POU3F4",  "POU2F3",  "POU2F2",  "POU4F3",  "POU1F1", "POU4F2", "POU3F1", "POU6F1", "POU3F2", "POU2AF1"),
otf = c("BRN1",   "BRN3A",    "POU5F2",  "RPF-1",   "OCT1",    "BRN4",    "OCT11",   "OCT2",    "BRN3C",   "PIT1",   "BRN3B",  "OCT6",   "BRN5",   "OCT7",   "OBF1"))
tfs <- c(soxTFs, klfTFs, pouTFs, rfxTFs, vaxTFs, salTFs, vaxTFs, heyTFs, asclTFs, oliTFs)
qBF <- qBF %>% filter(Gene %in% tfs)
View(qBF)
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
tfs <- c(soxTFs, klfTFs, pouTFs, rfxTFs, vaxTFs, salTFs, vaxTFs, heyTFs, asclTFs, oliTFs)
View(qBF)
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
tfs <- c(soxTFs, klfTFs, pouTFs, rfxTFs, vaxTFs, salTFs, vaxTFs, heyTFs, asclTFs, oliTFs)
qBF <- qBF %>% filter(Gene %in% tfs) %>% select(Gene:G895)
dim(qBF)
#---- highlight the G523, G583, G649 and G620
qBF <- qBF %>% dplyr::select(Gene, G523, G583, G549, G620)
qBF.df <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "cellline", "essentiality"))
qBF.df$TFlabels <- ifelse(qBF.df$essentiality > 0, qBF.df$Gene, "")
p1 <- ggplot(qBF.df, aes(x = cellline, y = essentiality, fill = cellline)) + theme_bw() +
geom_violin(color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality < 0), ], aes(x = cellline, y = essentiality), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality > 0), ],  aes(x = cellline, y = essentiality), colour="red") +
geom_text_repel(aes(label = TFlabels)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score for TF")
p1
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
soxTFs <- qBF$Gene[grep("^SOX", qBF$Gene)]
klfTFs <- qBF$Gene[grep("^KLF", qBF$Gene)]
rfxTFs <- qBF$Gene[grep("^RFX", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
lhxTFs <- qBF$Gene[grep("^LHX2", qBF$Gene)]
salTFs <- qBF$Gene[grep("^SALL2", qBF$Gene)]
vaxTFs <- qBF$Gene[grep("^VAX2", qBF$Gene)]
heyTFs <- qBF$Gene[grep("^HEY2", qBF$Gene)]
asclTFs <- qBF$Gene[grep("^ASCL", qBF$Gene)]
pouTFs <- qBF$Gene[grep("^POU", qBF$Gene)]
oliTFs <- qBF$Gene[grep("^OLIG", qBF$Gene)]
tfs <- c(soxTFs, klfTFs, pouTFs, rfxTFs, vaxTFs, salTFs, vaxTFs, heyTFs, asclTFs, oliTFs)
qBF <- qBF %>% filter(Gene %in% tfs) %>% select(Gene:G895)
dim(qBF)
#---- highlight the G523, G583, G649 and G620
qBF <- qBF %>% dplyr::select(Gene, G523, G583, G549, G620)
qBF.df <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "cellline", "essentiality"))
qBF.df$TFlabels <- ifelse(qBF.df$essentiality > 0, qBF.df$Gene, "")
p1 <- ggplot(qBF.df, aes(x = cellline, y = essentiality, fill = cellline)) + theme_bw() +
geom_violin(color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality < 0), ], aes(x = cellline, y = essentiality), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality > 0), ],  aes(x = cellline, y = essentiality), colour="red") +
geom_text_repel(aes(label = TFlabels)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of TFs")
p1
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
View(qBF)
qBF$Gene
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
SOX
POU
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- qBF$Gene[grep("^OLIG", qBF$Gene) | (grep("^ASCL", qBF$Gene))]
SOX
POU
bHLH
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
SOX
POU
bHLH
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
tfs <- c(SOX, POU, bHLH)
qBF <- qBF %>% filter(Gene %in% tfs)
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
tfs <- c(SOX, POU, bHLH)
qBF <- qBF %>% filter(Gene %in% tfs)
qBF
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
tfs <- c(SOX, POU, bHLH)
qBF <- qBF %>% filter(Gene %in% tfs)
#---- highlight the G523, G583, G649 and G620
qBF <- qBF %>% dplyr::select(Gene, G523, G583, G549, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "cellline", "essentiality"))
qBFdf$TFlabels <- ifelse(qBFdf$essentiality > 0, qBFdf$Gene, "")
p1 <- ggplot(qBF.df, aes(x = cellline, y = essentiality, fill = cellline)) + theme_bw() +
geom_violin(color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality < 0), ], aes(x = cellline, y = essentiality), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBF.df[which(qBF.df$essentiality > 0), ],  aes(x = cellline, y = essentiality), colour="red") +
geom_text_repel(aes(label = TFlabels)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of TFs")
p1
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
tfs <- c(SOX, POU, bHLH)
qBF <- qBF %>% filter(Gene %in% tfs)
#---- highlight the G523, G583, G649 and G620
qBF <- qBF %>% dplyr::select(Gene, G523, G583, G549, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "cellline", "essentiality"))
qBFdf$TFlabels <- ifelse(qBFdf$essentiality > 0, qBFdf$Gene, "")
p1 <- ggplot(qBFdf, aes(x = cellline, y = essentiality, fill = cellline)) + theme_bw() +
geom_violin(color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBFdf[which(qBFdf$essentiality < 0), ], aes(x = cellline, y = essentiality), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBFdf[which(qBFdf$essentiality > 0), ],  aes(x = cellline, y = essentiality), colour="red") +
geom_text_repel(aes(label = TFlabels)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of TFs")
p1
qBFdf
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = T) %>% as.data.frame()
qBF <- qBF %>% filter(Gene %in% c("EGFR", "MDM2", "AGAP2", "CDK4", "MYCN")) %>% dplyr::select(Gene, G523, G549, G583, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "sample", "qBF"))
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
#~~~
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
pdf(paste0("./outputs/qBF_TF.pdf"), width = 4, height = 2) # width = 6
p <- ggplot(qBFdf, aes(x = Gene, y = qBF)) + theme_bw() +
geom_violin( color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[-which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ], aes(x = Gene, y = qBF), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ],  aes(x = Gene, y = qBF), colour="red") +
geom_text_repel(aes(label = label)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", linewidth = 0.25) +
scale_color_manual(values = c("positive" = "red", "negative" = "grey")) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of oncogene")
print(p)
dev.off()
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = T) %>% as.data.frame()
qBF <- qBF %>% filter(Gene %in% c("EGFR", "MDM2", "AGAP2", "CDK4", "MYCN")) %>% dplyr::select(Gene, G523, G549, G583, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "sample", "qBF"))
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
#~~~
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
pdf(paste0("./outputs/qBF_TF.pdf"), width = 6, height = 2) # width = 6
p <- ggplot(qBFdf, aes(x = Gene, y = qBF)) + theme_bw() +
geom_violin( color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[-which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ], aes(x = Gene, y = qBF), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ],  aes(x = Gene, y = qBF), colour="red") +
geom_text_repel(aes(label = label)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", linewidth = 0.25) +
scale_color_manual(values = c("positive" = "red", "negative" = "grey")) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of oncogene")
print(p)
dev.off()
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = T) %>% as.data.frame()
qBF <- qBF %>% filter(Gene %in% c("EGFR", "MDM2", "AGAP2", "CDK4", "MYCN")) %>% dplyr::select(Gene, G523, G549, G583, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "sample", "qBF"))
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
#~~~
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
pdf(paste0("./outputs/qBF_TF.pdf"), width = 6, height = 4) # width = 6
p <- ggplot(qBFdf, aes(x = Gene, y = qBF)) + theme_bw() +
geom_violin( color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[-which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ], aes(x = Gene, y = qBF), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ],  aes(x = Gene, y = qBF), colour="red") +
geom_text_repel(aes(label = label)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", linewidth = 0.25) +
scale_color_manual(values = c("positive" = "red", "negative" = "grey")) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of oncogene")
print(p)
dev.off()
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = T) %>% as.data.frame()
qBF <- qBF %>% filter(Gene %in% c("EGFR", "MDM2", "AGAP2", "CDK4", "MYCN")) %>% dplyr::select(Gene, G523, G549, G583, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "sample", "qBF"))
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
#~~~
qBFdf$genelabels <- ifelse(qBFdf$sample %in% c("G523", "G583"), ifelse(qBFdf$sample %in% "G583", "G583", "G523"), "")
qBFdf$genelabrrr <- ifelse(qBFdf$sample %in% c("G549", "G620"), ifelse(qBFdf$sample %in% "G620", "G620", "G549"), "")
qBFdf$label <- paste(qBFdf$genelabels, qBFdf$genelabrrr, sep = "")
qBFdf <- qBFdf %>% mutate(color = ifelse(qBF > 0, "positive", "negative"))
pdf(paste0("./outputs/qBF_oncogene.pdf"), width = 6, height = 4) # width = 6
p <- ggplot(qBFdf, aes(x = Gene, y = qBF)) + theme_bw() +
geom_violin( color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[-which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ], aes(x = Gene, y = qBF), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.12), data = qBFdf[which(qBFdf$label %in% c("G523", "G583", "G549", "G620")), ],  aes(x = Gene, y = qBF), colour="red") +
geom_text_repel(aes(label = label)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", linewidth = 0.25) +
scale_color_manual(values = c("positive" = "red", "negative" = "grey")) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of oncogene")
print(p)
dev.off()
rm(list = ls())
library(dplyr)
library(readxl)
library(ggplot2)
library(ggrepel)
library(reshape2)
library(magrittr)
library(data.table)
qBF = read_excel("./inputs/GBM5K_qBF.xlsx", col_names = TRUE) %>% as.data.frame()
SOX <- qBF$Gene[grep("^SOX", qBF$Gene)]
POU <- qBF$Gene[grep("^POU", qBF$Gene)]
bHLH <- c(qBF$Gene[grep("^OLIG", qBF$Gene)], qBF$Gene[(grep("^ASCL", qBF$Gene))])
tfs <- c(SOX, POU, bHLH)
qBF <- qBF %>% filter(Gene %in% tfs)
#---- highlight the G523, G583, G649 and G620
qBF <- qBF %>% dplyr::select(Gene, G523, G583, G549, G620)
qBFdf <- reshape2::melt(qBF, id.vars = "Gene") %>% magrittr::set_colnames(c("Gene", "cellline", "essentiality"))
qBFdf$TFlabels <- ifelse(qBFdf$essentiality > 0, qBFdf$Gene, "")
pdf(paste0("./outputs/qBF_TF.pdf"), width = 6, height = 4) # width = 6
p1 <- ggplot(qBFdf, aes(x = cellline, y = essentiality, fill = cellline)) + theme_bw() +
geom_violin(color = "blue") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBFdf[which(qBFdf$essentiality < 0), ], aes(x = cellline, y = essentiality), colour="black") +
geom_point(position = position_jitter(seed = 1, width = 0.1), data = qBFdf[which(qBFdf$essentiality > 0), ],  aes(x = cellline, y = essentiality), colour="red") +
geom_text_repel(aes(label = TFlabels)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, colour = "black"),
axis.text.y = element_text(color = "black"),
panel.grid = element_blank()) +
xlab("") + ylab("qBF score of TFs")
p1
dev.off()
